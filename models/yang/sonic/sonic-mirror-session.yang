module sonic-mirror-session {
    namespace "http://github.com/Azure/sonic-mirror-session";
    prefix sms;
    yang-version 1.1;

    import ietf-inet-types {
        prefix inet;
    }

    import ietf-yang-types {
        prefix yang;
    }

    import sonic-extension {
        prefix sonic-ext;
    }

    import sonic-port {
        prefix prt;
    }

    import sonic-portchannel {
        prefix spc;
    }


    organization
        "SONiC";

    contact
        "SONiC";

    description
        "SONIC MIRROR SESSION";

    revision 2019-05-15 {
        description
            "Initial revision.";
    }

    container sonic-mirror-session {

        container MIRROR_SESSION {

            list MIRROR_SESSION_LIST {
                key "name";

                leaf name {
                    type string;
                }

                leaf src_ip {
                    type inet:ipv4-address;
                }

                leaf dst_ip {
                    type inet:ipv4-address;
                }

                leaf gre_type {
                    type string {
                        pattern "0[xX][0-9a-fA-F]*";
                    }
                }

                leaf dscp {
                    type uint8;
                }

                leaf ttl {
                    type uint8;
                }

                leaf queue {
                    type uint8;
                }

                leaf dst_port {
                    type string;
                    must "count(../../MIRROR_SESSION_LIST[src_port=current()]) = 0" {
                        error-message "destination port cannot be same as source port";
                        error-app-tag mirror-session-invalid_dst_port;
                    }
                }

                leaf src_port {
                    type union {
                        type leafref {
                            path "/prt:sonic-port/prt:PORT/prt:PORT_LIST/prt:ifname";
                        }
                        type leafref {
                            path "/spc:sonic-portchannel/spc:PORTCHANNEL/spc:PORTCHANNEL_LIST/spc:name";
                        }
                    }
                    must "count(../../MIRROR_SESSION_LIST[dst_port=current()]) = 0" {
                        error-message "source port cannot be same as destination port";
                        error-app-tag mirror-session-invalid_src_port;
                    }
                }

                leaf direction {
                    type enumeration {
                        enum rx;
                        enum tx;
                        enum both;
                    }
                }

                must "not (src_port) or not (dst_port) or (dst_port != src_port)" {
                    error-message "destination port cant be same as source port";
                    error-app-tag mirror-session-invalid;
                }
            }
        }

        //state sonic mirror session table
        container MIRROR_SESSION_TABLE { 

            sonic-ext:db-name "STATE_DB"; 
            sonic-ext:key-delim ":"; 

            config false;
            description "state mirror session table";

            list MIRROR_SESSION_TABLE_LIST { 
                sonic-ext:db-name "STATE_DB"; 

                key "name";

                leaf name {
                    type string;
                }

                leaf status {
                    type string;
                }

                leaf monitor_port {
                    type string;
                }

                leaf dst_mac {
                    type string;
                }

                leaf route_prefix {
                    type string;
                }

                leaf vlan_header_valid {
                    type uint32;
                }
            }
        }
    }
}
