<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright 2019 Dell, Inc.  

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
--> 

<CLISH_MODULE
    xmlns="http://www.dellemc.com/sonic/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xsi:schemaLocation="http://www.dellemc.com/sonic/XMLSchema
                        http://www.dellemc.com/sonic/XMLSchema/clish.xsd"
    >
    <!--=======================================================-->

<VIEW name="enable-view">
  <COMMAND name="show ip bgp" help="BGP information">
    <PARAM name="bgp subcommands" help="BGP Subcommands" ptype="SUBCOMMAND" mode="switch" optional="true">
       <MACRO name="IP_BGP_SUB_CMDS" arg=""></MACRO>
       <PARAM name="vrf" help="BGP VRF" mode="subcommand" ptype="SUBCOMMAND" optional="true">
         <PARAM name="vrf-name" help="VRF Name" ptype="STRING" default="default">
           <PARAM name="ip subcommands" help="IP subcommands" ptype="SUBCOMMAND" mode="switch" optional="true">
           <MACRO name="IP_BGP_SUB_CMDS" arg=""></MACRO>
           </PARAM>
         </PARAM>
       </PARAM>
    </PARAM>
    <ACTION>
        if test -n "${ipv6}"; then&#xA;
           iptype=${ipv6}&#xA;
        else&#xA;
           iptype="ipv4"&#xA;
        fi&#xA;
        if test -n "${summary}"; then&#xA;
           python $SONIC_CLI_ROOT/sonic-cli-bgp.py get_ip_bgp_summary show_ip_bgp_summary.j2 ${vrf-name} $iptype&#xA;
        elif test -n "${prefix}"; then&#xA;
           python $SONIC_CLI_ROOT/sonic-cli-bgp.py get_show_bgp_prefix ${__full_line}&#xA;
        elif test -n "${peer-group}"; then&#xA;
	   if test -n "${peer-group-name}"; then&#xA;
              python $SONIC_CLI_ROOT/sonic-cli-bgp.py get_show_bgp_peer_group ${__full_line}&#xA;
	   else&#xA;
              python $SONIC_CLI_ROOT/sonic-cli-bgp.py get_show_bgp_peer_group_all ${__full_line}&#xA;
	   fi&#xA;
        elif test -n "${neighbors}"; then&#xA;
           if test -n "${neighbor-subcommands}"; then&#xA;
              python $SONIC_CLI_ROOT/sonic-cli-bgp.py get_show_bgp ${__full_line}&#xA;
           else&#xA;
              python $SONIC_CLI_ROOT/sonic-cli-bgp.py get_ip_bgp_neighbors show_ip_bgp_neighbors.j2 ${vrf-name} $iptype ${neighbor-ip}&#xA;
           fi&#xA;
        else&#xA;
           python $SONIC_CLI_ROOT/sonic-cli-bgp.py get_show_bgp ${__full_line}&#xA;
        fi&#xA;
  </ACTION>
  </COMMAND>
  <COMMAND name="clear ip bgp" help="Clear BGP">
    <PARAM name="clear_bgp_subcommands" help="BGP Subcommands" ptype="SUBCOMMAND" mode="switch">
        <MACRO name="CLEAR_BGP_COMMON_OPTIONS_SUB_CMDS" arg=""></MACRO>
        <MACRO name="CLEAR_IPV4_BGP_ADDR_OPTIONS_SUB_CMDS" arg=""></MACRO>
        <MACRO name="CLEAR_IPV6_BGP_ADDR_OPTIONS_SUB_CMDS" arg=""></MACRO>
        <MACRO name="CLEAR_IP_BGP_SUB_CMDS" arg=""></MACRO>
        <PARAM name="vrf" help="BGP VRF" ptype="SUBCOMMAND" mode="subcommand" optional="true">
         <PARAM name="vrf-name" help="VRF Name" ptype="STRING" default="default">
           <PARAM name="ip_subcommands" help="IP subcommands" ptype="SUBCOMMAND" mode="switch">
               <MACRO name="CLEAR_BGP_COMMON_OPTIONS_SUB_CMDS" arg=""></MACRO>
               <MACRO name="CLEAR_IPV4_BGP_ADDR_OPTIONS_SUB_CMDS" arg=""></MACRO>
               <MACRO name="CLEAR_IPV6_BGP_ADDR_OPTIONS_SUB_CMDS" arg=""></MACRO>
               <MACRO name="CLEAR_IP_BGP_SUB_CMDS" arg=""></MACRO>
           </PARAM>
         </PARAM>
       </PARAM>
    </PARAM>
    <ACTION builtin="clish_pyobj">sonic_cli_clear_bgp clear_bgp asn=${as-num-dot} n-ipv4=${neighbor-ipv4} n-ipv6=${neighbor-ipv6} ${__full_line}</ACTION>
  </COMMAND>
</VIEW>

<VIEW name="configure-view">
  <COMMAND name="router" help="Router mode" view="configure-router-bgp-view" viewid="instance=${as-num-dot};vrf-name=${vrf-name}">
    <PARAM name="bgp" help="Border Gateway protocol (BGP)" mode="subcommand" ptype="SUBCOMMAND">
      <PARAM name="as-num-dot" help="Autonomous system number" ptype="RANGE_1_4294967295" view="configure-router-bgp-view" viewid="instance=${as-num-dot};vrf-name=${vrf-name}">
        <PARAM name="vrf" help="VRF Instance" ptype="SUBCOMMAND" mode="subcommand" optional="true">
          <PARAM name="vrf-name" help="Name of VRF (Max size 32, prefixed by Vrf)" ptype="STRING_32" view="configure-router-bgp-view" default="default"/>
        </PARAM>
      </PARAM>
    </PARAM>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_config_as ${vrf-name} ${as-num-dot}</ACTION>
  </COMMAND>
  <COMMAND name="no router" help="Border Gateway protocol (BGP)">
    <PARAM name="bgp" help="Border Gateway protocol (BGP)" mode="subcommand" ptype="SUBCOMMAND">
      <PARAM name="vrf" help="VRF Instance" ptype="SUBCOMMAND" mode="subcommand" optional="true">
        <PARAM name="vrf-name" help="VRF Name" ptype="STRING" view="configure-router-bgp-view" default="default"/>
      </PARAM>
    </PARAM>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_config ${vrf-name}</ACTION>
  </COMMAND>
</VIEW>

<VIEW name="configure-router-bgp-view" prompt="${SYSTEM_NAME}(config-router-bgp)# "
      depth="2">
  <NAMESPACE ref="configure-view" help="false" completion="false" />
  
  <COMMAND name="router-id" help="Override configured router identifier">
    <PARAM name="ip-addr" help="Router identifier" ptype="IP_ADDR"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_config_router_id ${vrf-name} ${ip-addr}</ACTION>
  </COMMAND>
  
  <COMMAND name="graceful-restart" help="BGP graceful restart feature"/>
  <COMMAND name="graceful-restart enable" help="Enable BGP graceful restart">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_graceful_restart_config_enabled ${vrf-name} True</ACTION>
  </COMMAND>
  <COMMAND name="graceful-restart preserve-fw-state" help="Enable BGP graceful restart preserve FW state">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_graceful_restart_config_preserve_fw_state ${vrf-name} True</ACTION>
  </COMMAND>
  <COMMAND name="graceful-restart restart-time" help="BGP graceful restart restart-time">
    <PARAM name="restart-time" help="Seconds" ptype="RANGE_1_3600"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_graceful_restart_config_restart_time ${vrf-name} ${restart-time}</ACTION>
  </COMMAND>
  <COMMAND name="graceful-restart stalepath-time" help="BGP graceful restart stalepath-time">
    <PARAM name="stalepath-time" help="Seconds" ptype="RANGE_1_3600"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_graceful_restart_config_stale_routes_time ${vrf-name} ${stalepath-time}</ACTION>
  </COMMAND>
  
  <COMMAND name="always-compare-med" help="Allow comparing MED from different neighbors">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_route_selection_options_config_always_compare_med ${vrf-name} True</ACTION>
  </COMMAND>

  <COMMAND name="coalesce-time" help="Subgroup coalesce timer">
    <PARAM name="coaltime" help="Subgroup coalesce timer value (in ms)" ptype="RANGE_1_4294967295"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_coalesce_time ${vrf-name} ${coaltime}</ACTION>
  </COMMAND>
  <COMMAND name="read-quanta" help="How many packets to read from peer socket per I/O cycle">
    <PARAM name="rdval" help="Number of packets" ptype="RANGE_1_10"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_read_quanta ${vrf-name} ${rdval}</ACTION>
  </COMMAND>
  <COMMAND name="write-quanta" help="How many packets to write to peer socket per run">
    <PARAM name="wrval" help="Number of packets" ptype="RANGE_1_10"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_write_quanta ${vrf-name} ${wrval}</ACTION>
  </COMMAND>
  <COMMAND name="client-to-client" help="Configure client to client route reflection"/>
  <COMMAND name="client-to-client reflection" help="Route reflection">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_clnt_to_clnt_reflection ${vrf-name} True</ACTION>
  </COMMAND>
  <COMMAND name="cluster-id" help="Configure Route-Reflector Cluster-id">
    <PARAM name="intval-ip" help= "Route-Reflector Cluster-id as IP address format or 32-bit quantity" ptype="INT32_OR_IP_ADDR"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_bgp_ext_route_reflector_config_route_reflector_cluster_id ${vrf-name} ${intval-ip}</ACTION>
  </COMMAND>
  <COMMAND name="log-neighbor-changes" help="Log neighbor up/down and reset reason(default)">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_logging_options_config_log_neighbor_state_changes ${vrf-name} True</ACTION>
  </COMMAND>
  <COMMAND name="deterministic-med" help="Pick the best-MED path among paths advertised from the neighboring AS">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_deterministic_med ${vrf-name} True</ACTION>
  </COMMAND>
  <COMMAND name="disable-ebgp-connected-route-check" help="Disable checking if nexthop is connected on ebgp sessions">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_disable_ebgp_connected_route_check ${vrf-name} True</ACTION>
  </COMMAND>
  <COMMAND name="graceful-shutdown" help="Graceful shutdown parameters">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_graceful_shutdown ${vrf-name} True</ACTION>
  </COMMAND>
  <COMMAND name="max-med" help="Advertise routes with max-med">
    <PARAM name="maxmedopts" help="MAX_MED admin or startup" mode="switch" ptype="SUBCOMMAND">
      <PARAM name="on-startup" help="Effective on a startup" ptype="SUBCOMMAND" mode="subcommand">
        <PARAM name="stime" help="Time (seconds) period for max-med" ptype="RANGE_5_86400"/>
      </PARAM>
      <PARAM name="administrative" help="Administratively applied,  for an indefinite period" ptype="SUBCOMMAND" mode="subcommand"/>
    </PARAM>
    <PARAM name="maxmedval" help="Max MED value to be used" ptype="RANGE_0_4294967295" optional="true"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_max_med_config ${vrf-name} ${maxmedopts} ${stime} ${maxmedval}&#xA;
             if test -z "${maxmedval}" ; then&#xA;
                 if test "${maxmedopts}" = "on-startup" ; then&#xA;
                    python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_max_med_config_max_med_val ${vrf-name}&#xA;
                 else&#xA;
                    python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_max_med_config_admin_max_med_val ${vrf-name}&#xA;
                 fi&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="default" help="Configure BGP defaults"/>
  <COMMAND name="default ipv4-unicast" help="Activate ipv4-unicast for a peer by default">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_global_defaults_config_ipv4_unicast ${vrf-name} True</ACTION>
  </COMMAND>
  <COMMAND name="default local-preference" help="Local preference (higher=more preferred)">
       <PARAM name="lprftime" help="Configure default local preference value" ptype="RANGE_0_4294967295"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_global_defaults_config_local_preference ${vrf-name} ${lprftime}</ACTION>
  </COMMAND>
  <COMMAND name="default show-hostname" help="Show hostname in certain command outputs">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_global_defaults_config_show_hostname ${vrf-name} True</ACTION>
  </COMMAND>
  <COMMAND name="default shutdown" help="Apply administrative shutdown to newly configured peers">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_global_defaults_config_shutdown ${vrf-name} True</ACTION>
  </COMMAND>
  <COMMAND name="default subgroup-pkt-queue-max" help="subgroup-pkt-queue-max">
       <PARAM name="maxval" help="Configure subgroup packet queue max" ptype="RANGE_20_100"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_global_defaults_config_subgroup_pkt_queue_max ${vrf-name} ${maxval}</ACTION>
  </COMMAND>
  <COMMAND name="fast-external-failover" help="Immediately reset session if a link to a directly connected external peer goes down">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_fast_external_failover ${vrf-name} True</ACTION>
  </COMMAND>
  <COMMAND name="network" help="Check BGP network route exists in IGP"/>
  <COMMAND name="network import-check" help="">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_network_import_check ${vrf-name} True</ACTION>
  </COMMAND>
  <COMMAND name="route-map" help="Time in secs to wait before processing route-map changes"/>
  <COMMAND name="route-map delay-timer" help="Time in secs to wait before processing route-map changes">
    <PARAM name="delaytm" help="0 disables the timer,  no route updates happen when route-maps change" ptype="RANGE_0_600"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_route_map_process_delay ${vrf-name} ${delaytm}</ACTION>
  </COMMAND>
  <COMMAND name="route-reflector" help="Allow modifications made by out route-map"/>
  <COMMAND name="route-reflector allow-outbound-policy" help="Allow modifications made by out route-map">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_bgp_ext_route_reflector_config_allow_outbound_policy ${vrf-name} True</ACTION>
  </COMMAND>
  <COMMAND name="update-delay" help="Force initial delay for best-path and updates">
    <PARAM name="time" help="Seconds" ptype="RANGE_0_3600">
       <PARAM name="maxmedval" help="Seconds" ptype="RANGE_1_3600" optional="true"/>
    </PARAM>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_update_delay_config ${vrf-name} ${time} ${maxmedval}&#xA;
             if test -z "${maxmedval}" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_update_delay_config_establish_wait ${vrf-name}&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="bestpath" help="Change the default bestpath selection"/>
  <COMMAND name="bestpath as-path" help="AS-path for best path computation"/>
  <COMMAND name="bestpath as-path multipath-relax" help="Include prefixes received from different AS path during multipath calculation">
    <PARAM name="as-set" help="Generate AS set path information" mode="subcommand" ptype="SUBCOMMAND" optional="true"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_use_multiple_paths_ebgp_config ${vrf-name} True ${as-set}</ACTION>
  </COMMAND>
  <COMMAND name="bestpath as-path ignore" help="Ignore AS path for best path computation">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_route_selection_options_config_ignore_as_path_length ${vrf-name} True</ACTION>
  </COMMAND>
  <COMMAND name="bestpath as-path confed" help="Compare path lengths including confederation sets and sequences in selecting a route">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_route_selection_options_config_compare_confed_as_path ${vrf-name} True</ACTION>
  </COMMAND>
  <COMMAND name="bestpath med" help="MED attribute">
    <PARAM name="medopt" mode="switch" ptype="SUBCOMMAND" help="MED option">
      <PARAM name="missing-as-worst" mode="subcommand" ptype="SUBCOMMAND" help="Treat missing MED as the least preferred one">
         <PARAM name="confed" help="Compare MED among confederation paths" mode="subcommand" ptype="SUBCOMMAND" optional="true"/>
      </PARAM>
      <PARAM name="confed" help="Compare MED among confederation paths" mode="subcommand" ptype="SUBCOMMAND">
         <PARAM name="missing-as-worst" mode="subcommand" ptype="SUBCOMMAND" help="Treat missing MED as the least preferred one" optional="true"/>
      </PARAM>
    </PARAM>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_route_selection_options_config_med_missing_as_worst ${vrf-name} ${missing-as-worst}&#xA;
             python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_route_selection_options_config_med_confed ${vrf-name} ${confed}&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="bestpath compare-routerid" help="Compare router-id for identical EBGP paths">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_route_selection_options_config_external_compare_router_id ${vrf-name} True</ACTION>
  </COMMAND>

  <COMMAND name="neighbor" help="Specify a neighbor router" view="configure-router-bgp-nbr-view" viewid="nbr-addr=${ip}${interface}${ifnum};vrf-name=${vrf-name}">
    <PARAM name="nbopt" help="neighbor router" mode="switch" ptype="SUBCOMMAND">
      <PARAM name="ip" help="Neighbor router" ptype="IPV4V6_ADDR"/>
      <PARAM name="interface" help="Interface type name" ptype="STRING">
          <PARAM name="ifnum" help="Interfce number" ptype="LOOPBACK_NUM" optional="true"/>
      </PARAM>
    </PARAM>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config ${vrf-name} ${ip} ${interface}${ifnum} ${instance}</ACTION>
  </COMMAND>

  <COMMAND name="peer-group" help="Specify a peer-group" view="configure-router-bgp-template-view" viewid="template-name=${template-str};vrf-name=${vrf-name}">
    <PARAM name="template-str" help="Peer-group" ptype="STRING" view="configure-router-bgp-template-view" viewid="template-name=${template-str}"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config ${vrf-name} ${template-str} ${instance}</ACTION>
  </COMMAND>
  <COMMAND name="address-family" help="Enter Address Family command mode"/>
  <COMMAND name="address-family ipv4" help="Enter Address Family command mode" view="configure-router-bgp-ipv4-view" viewid="vrf-name=${vrf-name};family=ipv4">
    <PARAM name="unicast" help="Address Family" mode="subcommand" ptype="SUBCOMMAND" view="configure-router-bgp-ipv4-view" viewid="vrf-family=ipv4"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_afi_safis_afi_safi_config ${vrf-name} IPV4_UNICAST</ACTION>
  </COMMAND>
  <COMMAND name="address-family ipv6" help="Enter Address Family command mode" view="configure-router-bgp-ipv6-view" viewid="vrf-name=${vrf-name};family=ipv6">
    <PARAM name="unicast" help="Address Family" mode="subcommand" ptype="SUBCOMMAND" view="configure-router-bgp-ipv6-view" viewid="family=ipv6"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_afi_safis_afi_safi_config ${vrf-name} IPV6_UNICAST</ACTION>
  </COMMAND>
  <COMMAND name="address-family l2vpn" help="Enter Address Family command mode" view="configure-router-bgp-l2vpn-view" viewid="vrf-name=${vrf-name};family=l2vpn">
    <PARAM name="evpn" help="Address Family" mode="subcommand" ptype="SUBCOMMAND" view="configure-router-bgp-l2vpn-view" viewid="family=l2vpn"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_afi_safis_afi_safi_config ${vrf-name} L2VPN_EVPN</ACTION>
  </COMMAND>

  <COMMAND name="listen" help="Set the prefix range for dynamic peers">
    <PARAM name="listen-opt" help="Listen options" mode="switch" ptype="SUBCOMMAND">
     <PARAM name="range" help="Configure BGP dynamic neighbors listen range" mode="subcommand" ptype="SUBCOMMAND"> 
       <PARAM name="addr" help="Neighbor prefix" ptype="IPV4_IPV6_NETWORK">
         <PARAM name="peer-group" help="Member of the peer-group" mode="subcommand" ptype="SUBCOMMAND">
           <PARAM name="pgname" help="Peer-group name" ptype="STRING"/>
         </PARAM>
       </PARAM>
     </PARAM>
     <PARAM name="limit" help="maximum number of BGP Dynamic Neighbors that can be created" mode="subcommand" ptype="SUBCOMMAND">
       <PARAM name="lmt-val" help="Limit value" ptype="RANGE_1_5000"/>
     </PARAM>
    </PARAM>
    <ACTION> 
             if test "${listen-opt}" = "range" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance1717438887 ${vrf-name} ${addr} ${pgname}&#xA;
             else&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_max_dynamic_neighbors ${vrf-name} ${lmt-val}&#xA;
             fi&#xA;
    </ACTION>
  
  </COMMAND>
  <COMMAND name="confederation" help="AS confederation parameters">
    <PARAM name="conf-opt" help="Listen options" mode="switch" ptype="SUBCOMMAND">
      <PARAM name="identifier" help="AS number" mode="subcommand" ptype="SUBCOMMAND">
        <PARAM name="id-as" help="Autonomous system number" ptype="RANGE_1_4294967295"/>
      </PARAM>
      <PARAM name="peers" help="Peer ASs in BGP confederation" mode="subcommand" ptype="SUBCOMMAND">
        <PARAM name="peer-as" help="Autonomous system number" ptype="RANGE_1_4294967295"/>
      </PARAM>
    </PARAM>
    <ACTION>
             if test "${conf-opt}" = "identifier" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_confederation_config_identifier ${vrf-name} ${id-as}&#xA;
             else&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_confederation_config_member_as ${vrf-name} ${peer-as}&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="timers" help="Adjust routing timers">
    <PARAM name="keepalive-intvl" help="Keepalive interval (default=60)" ptype="RANGE_1_3600">
      <PARAM name="hold-time" help="Holdtime (default=180)" ptype="RANGE_1_3600"/>
    </PARAM>
    <ACTION>
              python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_keepalive_interval ${vrf-name} ${keepalive-intvl}&#xA;

              python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_hold_time ${vrf-name} ${hold-time}&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no" help="no commands"/>
  <COMMAND name="no router-id" help="Override configured router identifier">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_config_router_id ${vrf-name} ${ip-addr}</ACTION>
  </COMMAND>
  <COMMAND name="no graceful-restart" help="BGP graceful restart feature"/>
  <COMMAND name="no graceful-restart enable" help="Disable BGP graceful restart">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_graceful_restart_config_enabled ${vrf-name}</ACTION>
  </COMMAND>
  <COMMAND name="no graceful-restart preserve-fw-state" help="Disable BGP graceful restart preserve FW state">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_graceful_restart_config_preserve_fw_state ${vrf-name} True</ACTION>
  </COMMAND>
  <COMMAND name="no graceful-restart restart-time" help="Unconfigure BGP graceful restart restart-time">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_graceful_restart_config_restart_time ${vrf-name}</ACTION>
  </COMMAND>
  <COMMAND name="no graceful-restart stalepath-time" help="Unconfigure BGP graceful restart stalepath-time">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_graceful_restart_config_stale_routes_time ${vrf-name}</ACTION>
  </COMMAND>
  
  <COMMAND name="no always-compare-med" help="Allow comparing MED from different neighbors">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_route_selection_options_config_always_compare_med ${vrf-name}</ACTION>
  </COMMAND>
  <COMMAND name="no coalesce-time" help="Subgroup coalesce timer">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_coalesce_time ${vrf-name}</ACTION>
  </COMMAND>
  <COMMAND name="no read-quanta" help="How many packets to read from peer socket per I/O cycle">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_read_quanta ${vrf-name}</ACTION>
  </COMMAND>
  <COMMAND name="no write-quanta" help="How many packets to write to peer socket per run">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_write_quanta ${vrf-name} ${wrval}</ACTION>
  </COMMAND>
  <COMMAND name="no client-to-client" help="Configure client to client route reflection"/>
  <COMMAND name="no client-to-client reflection" help="Route reflection">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_clnt_to_clnt_reflection ${vrf-name} False</ACTION>
  </COMMAND>
  <COMMAND name="no cluster-id" help="Configure Route-Reflector Cluster-id">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_bgp_ext_route_reflector_config_route_reflector_cluster_id ${vrf-name}</ACTION>
  </COMMAND>
  <COMMAND name="no log-neighbor-changes" help="Log neighbor up/down and reset reason(default)">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_logging_options_config_log_neighbor_state_changes ${vrf-name} False</ACTION>
  </COMMAND>
  <COMMAND name="no deterministic-med" help="Pick the best-MED path among paths advertised from the neighboring AS">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_deterministic_med ${vrf-name}</ACTION>
  </COMMAND>
  <COMMAND name="no disable-ebgp-connected-route-check" help="Disable checking if nexthop is connected on ebgp sessions">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_disable_ebgp_connected_route_check ${vrf-name}</ACTION>
  </COMMAND>
  <COMMAND name="no graceful-shutdown" help="Graceful shutdown parameters">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_graceful_shutdown ${vrf-name}</ACTION>
  </COMMAND>
  <COMMAND name="no max-med" help="Advertise routes with max-med">
    <PARAM name="maxmedopts" help="MAX_MED admin or startup" mode="switch" ptype="SUBCOMMAND">
      <PARAM name="on-startup" help="Effective on a startup" ptype="SUBCOMMAND" mode="subcommand">
        <PARAM name="stime" help="Time (seconds) period for max-med" ptype="RANGE_5_86400"/>
      </PARAM>
      <PARAM name="administrative" help="Administratively applied,  for an indefinite period" ptype="SUBCOMMAND" mode="subcommand"/>
    </PARAM>
    <PARAM name="maxmedval" help="Max MED value to be used" ptype="RANGE_0_4294967295" optional="true"/>
    <ACTION> if test "${maxmedopts}" = "on-startup" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_max_med_config_time ${vrf-name}&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_max_med_config_max_med_val ${vrf-name}&#xA;
             else&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_max_med_config_administrative ${vrf-name}&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_max_med_config_admin_max_med_val ${vrf-name}&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no default" help="Configure BGP defaults"/>
  <COMMAND name="no default ipv4-unicast" help="Activate ipv4-unicast for a peer by default">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_global_defaults_config_ipv4_unicast ${vrf-name} False</ACTION>
  </COMMAND>
  <COMMAND name="no default local-preference" help="Local preference (higher=more preferred)">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_global_defaults_config_local_preference ${vrf-name}</ACTION>
  </COMMAND>
  <COMMAND name="no default show-hostname" help="Show hostname in certain command outputs">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_global_defaults_config_show_hostname ${vrf-name}</ACTION>
  </COMMAND>
  <COMMAND name="no default shutdown" help="Apply administrative shutdown to newly configured peers">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_global_defaults_config_shutdown ${vrf-name}</ACTION>
  </COMMAND>
  <COMMAND name="no default subgroup-pkt-queue-max" help="subgroup-pkt-queue-max">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_global_defaults_config_subgroup_pkt_queue_max ${vrf-name}</ACTION>
  </COMMAND>
  <COMMAND name="no fast-external-failover" help="Immediately reset session if a link to a directly connected external peer goes down">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_fast_external_failover ${vrf-name} False</ACTION>
  </COMMAND>
  <COMMAND name="no network" help="Check BGP network route exists in IGP"/>
  <COMMAND name="no network import-check" help="">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_network_import_check ${vrf-name}</ACTION>
  </COMMAND>
  <COMMAND name="no route-map" help="Time in secs to wait before processing route-map changes"/>
  <COMMAND name="no route-map delay-timer" help="Time in secs to wait before processing route-map changes">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_route_map_process_delay ${vrf-name}</ACTION>
  </COMMAND>
  <COMMAND name="no route-reflector" help="Allow modifications made by out route-map"/>
  <COMMAND name="no route-reflector allow-outbound-policy" help="Allow modifications made by out route-map">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_bgp_ext_route_reflector_config_allow_outbound_policy ${vrf-name}</ACTION>
  </COMMAND>
  <COMMAND name="no update-delay" help="Force initial delay for best-path and updates">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_update_delay_config_max_delay ${vrf-name}&#xA;
             python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_update_delay_config_establish_wait ${vrf-name}&#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="no bestpath" help="Change the default bestpath selection"/>
  <COMMAND name="no bestpath as-path" help="AS-path for best path computation"/>
  <COMMAND name="no bestpath as-path multipath-relax" help="Include prefixes received from different AS path during multipath calculation">
    <PARAM name="as-set" help="Generate AS set path information" mode="subcommand" ptype="SUBCOMMAND" optional="true"/>
    <ACTION> 
             if test -n "${as-set}" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_use_multiple_paths_ebgp_config_as_set ${vrf-name}&#xA;
             else&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_use_multiple_paths_ebgp_config_allow_multiple_as ${vrf-name}&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_use_multiple_paths_ebgp_config_as_set ${vrf-name}&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no bestpath as-path ignore" help="Ignore AS path for best path computation">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_route_selection_options_config_ignore_as_path_length ${vrf-name}</ACTION>
  </COMMAND>
  <COMMAND name="no bestpath as-path confed" help="Compare path lengths including confederation sets and sequences in selecting a route">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_route_selection_options_config_compare_confed_as_path ${vrf-name} True</ACTION>
  </COMMAND>
  <COMMAND name="no bestpath med" help="MED attribute">
    <PARAM name="medopt" mode="switch" ptype="SUBCOMMAND" help="MED option" optional="true">
      <PARAM name="missing-as-worst" mode="subcommand" ptype="SUBCOMMAND" help="Treat missing MED as the least preferred one">
         <PARAM name="confed" help="Compare MED among confederation paths" mode="subcommand" ptype="SUBCOMMAND" optional="true"/>
      </PARAM>
      <PARAM name="confed" help="Compare MED among confederation paths" mode="subcommand" ptype="SUBCOMMAND">
         <PARAM name="missing-as-worst" mode="subcommand" ptype="SUBCOMMAND" help="Treat missing MED as the least preferred one" optional="true"/>
      </PARAM>
    </PARAM>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_route_selection_options_config_med_missing_as_worst ${vrf-name} ${missing-as-worst}&#xA;
             python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_route_selection_options_config_med_confed ${vrf-name} ${confed}&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no bestpath compare-routerid" help="Compare router-id for identical EBGP paths">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_route_selection_options_config_external_compare_router_id ${vrf-name} True</ACTION>
  </COMMAND>

  <COMMAND name="no neighbor" help="Specify a neighbor router">
    <PARAM name="nbopt" help="neighbor router" mode="switch" ptype="SUBCOMMAND">
      <PARAM name="ip" help="Neighbor router" ptype="IPV4V6_ADDR"/>
      <PARAM name="interface" help="Interface type name" ptype="STRING">
          <PARAM name="ifnum" help="Interfce number" ptype="LOOPBACK_NUM" optional="true"/>
      </PARAM>
    </PARAM>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor ${vrf-name} ${ip} ${interface}${ifnum}</ACTION>
  </COMMAND>
  <COMMAND name="no peer-group" help="Specify a peer-group">
    <PARAM name="template" help="Peer-group" ptype="STRING"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group ${vrf-name} ${template}</ACTION>
  </COMMAND>
  <COMMAND name="no address-family" help="Enter Address Family command mode"/>
  <COMMAND name="no address-family ipv4" help="Enter Address Family command mode">
    <PARAM name="unicast" help="Address Family" mode="subcommand" ptype="SUBCOMMAND"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_afi_safis_afi_safi ${vrf-name} IPV4_UNICAST</ACTION>
  </COMMAND>
  <COMMAND name="no address-family ipv6" help="Enter Address Family command mode">
    <PARAM name="unicast" help="Address Family" mode="subcommand" ptype="SUBCOMMAND"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_afi_safis_afi_safi ${vrf-name} IPV6_UNICAST</ACTION>
  </COMMAND>
  <COMMAND name="no address-family l2vpn" help="Enter Address Family command mode">
    <PARAM name="evpn" help="Address Family" mode="subcommand" ptype="SUBCOMMAND"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_afi_safis_afi_safi ${vrf-name} L2VPN_EVPN</ACTION>
  </COMMAND>

  <COMMAND name="no listen" help="Set the prefix range for dynamic peers">
    <PARAM name="listen-opt" help="Listen options" mode="switch" ptype="SUBCOMMAND">
     <PARAM name="range" help="Range for dynamic peers" mode="subcommand" ptype="SUBCOMMAND">
       <PARAM name="addr" help="Neighbor prefix" ptype="IPV4_IPV6_NETWORK">
         <PARAM name="peer-group" help="Member of the peer-group" mode="subcommand" ptype="SUBCOMMAND" optional="true">
           <PARAM name="pgname" help="Peer-group name" ptype="STRING"/>
         </PARAM>
       </PARAM>
     </PARAM>
     <PARAM name="limit" help="limit for dynamic peers" mode="subcommand" ptype="SUBCOMMAND">
       <PARAM name="lmt-val" help="Limit value" ptype="RANGE_1_5000"/>
     </PARAM>
    </PARAM>
    <ACTION>
             if test "${listen-opt}" = "range" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance1717438887 ${vrf-name} ${addr} ${pgname}&#xA;
             else&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_max_dynamic_neighbors ${vrf-name} ${lmt-val}&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no confederation" help="AS confederation parameters">
    <PARAM name="conf-opt" help="Listen options" mode="switch" ptype="SUBCOMMAND">
      <PARAM name="identifier" help="AS number" mode="subcommand" ptype="SUBCOMMAND">
        <PARAM name="id-as" help="Autonomous system number" ptype="RANGE_1_4294967295"/>
      </PARAM>
      <PARAM name="peers" help="Peer ASs in BGP confederation" mode="subcommand" ptype="SUBCOMMAND"/>
    </PARAM>
    <ACTION>
             if test "${conf-opt}" = "identifier" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_confederation_config_identifier ${vrf-name} ${id-as}&#xA;
             else&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_global_confederation_config_member_as ${vrf-name}&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no timers" help="Adjust routing timers">
    <PARAM name="keepalive-intvl" help="Keepalive interval (default=60)" ptype="RANGE_1_3600">
      <PARAM name="hold-time" help="Holdtime (default=180)" ptype="RANGE_1_3600"/>
    </PARAM>
    <ACTION>
              python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_keepalive_interval ${vrf-name} ${keepalive-intvl}&#xA;

              python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_global_config_hold_time ${vrf-name} ${hold-time}&#xA;

    </ACTION>
  </COMMAND>
</VIEW>


<VIEW name="configure-router-bgp-nbr-view" prompt="${SYSTEM_NAME}(config-router-bgp-neighbor)# " depth="3">
  <NAMESPACE ref="configure-view" help="false" completion="false" />
  <NAMESPACE ref="configure-router-bgp-view" help="false" completion="false" />
  <COMMAND name="description" help="Assign a string describing the neighbor">
    <PARAM name="String" help="Enter the string (max 80 characters) to describe neighbor/peer-group" ptype="STRING"/>  
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_description ${vrf-name} ${nbr-addr} ${String}</ACTION>
  </COMMAND>
  <COMMAND name="ebgp-multihop" help="Allow EBGP neighbors not on directly connected networks">
    <PARAM name="hop-count" help="Maximum hop count (default=255)" ptype="RANGE_1_255" optional="true"/>
    <ACTION> if test -n "${hop-count}" ; then&#xA; 
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_ebgp_multihop_config ${vrf-name} ${nbr-addr} True ${hop-count}&#xA;
             else&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_ebgp_multihop_config ${vrf-name} ${nbr-addr} True 255&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="peer-group" help="Inherit configuration of peer-group">
    <PARAM name="template-name" help="Name of peer-group from which to inherit" ptype="STRING"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_peer_group ${vrf-name} ${nbr-addr} ${template-name}</ACTION>
  </COMMAND>
  <COMMAND name="remote-as" help="Specify a BGP neighbor AS">
    <PARAM name="remtype" help="Remote type" mode="switch" ptype="SUBCOMMAND">
      <PARAM name="internal" help="Internal BGP peer" mode="subcommand" ptype="SUBCOMMAND"/>
      <PARAM name="external" help="External BGP peer" mode="subcommand" ptype="SUBCOMMAND"/>
      <PARAM name="as-num-dot" help="Autonomous system number" ptype="RANGE_1_4294967295"/>
    </PARAM>
    <ACTION>
             if test "${remtype}" = "internal" -o "${remtype}" = "external" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_peer_type ${vrf-name} ${nbr-addr} ${remtype}&#xA;
             else&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_peer_as ${vrf-name} ${nbr-addr} ${as-num-dot}&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="timers" help="Adjust routing timers">
    <PARAM name="timertype" help="Timer type" mode="switch" ptype="SUBCOMMAND">
      <PARAM name="keepalive-intvl" help="Keepalive interval (default=60)" ptype="RANGE_1_3600">
        <PARAM name="hold-time" help="Holdtime (default=180)" ptype="RANGE_1_3600"/>
      </PARAM>
      <PARAM name="connect" help="BGP connect timer" mode="subcommand" ptype="SUBCOMMAND">
        <PARAM name="connect-time" help="Connect timer" ptype="RANGE_1_65535"/>
      </PARAM>
    </PARAM>
    <ACTION> 
             if test "${timertype}" = "connect" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_timers_config_connect_retry ${vrf-name} ${nbr-addr} ${connect-time}&#xA;
             else&#xA;
python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_timers_config_keepalive_interval ${vrf-name} ${nbr-addr} ${keepalive-intvl}&#xA;
             python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_timers_config_hold_time ${vrf-name} ${nbr-addr} ${hold-time}&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="update-source" help="Source of routing updates">
    <PARAM name="source_param" help="update-source param"  mode="switch" ptype="SUBCOMMAND">
      <PARAM name="ip" help="IP source" ptype="IPV4V6_ADDR" view="configure-router-bgp-nbr-view" viewid="nbr-addr=${ip};vrf-name=${vrf-name}"/>
      <PARAM name="interface" help="Interface name" ptype="STRING"/>
    </PARAM>
    <ACTION> 
            if test "${source_param}" = "ip" ; then&#xA;
                   python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_transport_config_local_address ${vrf-name} ${nbr-addr} ${ip}&#xA;
            else&#xA; 
                   python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_transport_config_local_address ${vrf-name} ${nbr-addr} ${interface}&#xA;
            fi&#xA;            

                   
    </ACTION>
  </COMMAND>

  <COMMAND name="shutdown" help="Shutdown a neighbor">
    <PARAM name="message" help="Add a shutdown message (draft-ietf-idr-shutdown-06)" mode="subcommand" ptype="SUBCOMMAND" optional="true">
       <PARAM name="MSG" help="Shutdown message" ptype="STRING"/>  
    </PARAM>
    <ACTION> if test -n "${message}" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_shutdown_message ${vrf-name} ${nbr-addr} ${MSG}&#xA;
             fi&#xA;
             python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_enabled ${vrf-name} ${nbr-addr} False&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="advertisement-interval" help="Minimum interval between sending BGP routing updates">
    <PARAM name="tval" help="Seconds" ptype="RANGE_0_600"/>  
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_timers_config_minimum_advertisement_interval ${vrf-name} ${nbr-addr} ${tval}</ACTION>
  </COMMAND>
  <COMMAND name="bfd" help="Enables BFD support">
    <PARAM name="check-control-plane-failure" help="Link dataplane status with BGP controlplane" mode="subcommand" ptype="SUBCOMMAND" optional="true"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_bfd ${vrf-name} ${nbr-addr} True&#xA;
             if test -n "${check-control-plane-failure}" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_bfd_check_control_plane_failure ${vrf-name} ${nbr-addr} True&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="capability" help="Advertise capability to the peer"/>
  <COMMAND name="capability extended-nexthop" help="Advertise extended next-hop capability to the peer">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_capability_extended_nexthop ${vrf-name} ${nbr-addr} True</ACTION>
  </COMMAND>
  <COMMAND name="capability dynamic" help="Advertise dynamic capability to this neighbor">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_capability_dynamic ${vrf-name} ${nbr-addr} True</ACTION>
  </COMMAND>
  <COMMAND name="disable-connected-check" help="One-hop away EBGP peer using loopback address">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_disable_ebgp_connected_route_check ${vrf-name} ${nbr-addr} True</ACTION>
  </COMMAND>
  <COMMAND name="dont-capability-negotiate" help="Do not perform capability negotiation">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_dont_negotiate_capability ${vrf-name} ${nbr-addr} True</ACTION>
  </COMMAND>
  <COMMAND name="enforce-first-as" help="Enforce the first AS for EBGP routes">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_enforce_first_as ${vrf-name} ${nbr-addr} True</ACTION>
  </COMMAND>
  <COMMAND name="enforce-multihop" help="Enforce EBGP neighbors perform multihop">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_enforce_multihop ${vrf-name} ${nbr-addr} True</ACTION>
  </COMMAND>
  <COMMAND name="local-as" help="Specify a local-as number">
    <PARAM name="asnum" help="Autonomous system number" ptype="RANGE_1_4294967295">
      <PARAM name="no-prepend" help="Do not prepend local-as to updates from ebgp peers" mode="subcommand" ptype="SUBCOMMAND" optional="true">
        <PARAM name="replace-as" help="Do not prepend local-as to updates from ibgp peers"  mode="subcommand" ptype="SUBCOMMAND" optional="true"/>
      </PARAM>
    </PARAM>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_local_as ${vrf-name} ${nbr-addr} ${asnum}&#xA;
             if test -n "${no-prepend}" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_local_as_no_prepend ${vrf-name} ${nbr-addr} True&#xA;
             else&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_local_as_no_prepend ${vrf-name} ${nbr-addr} False&#xA;
             fi&#xA;
             if test -n "${replace-as}" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_local_as_replace_as ${vrf-name} ${nbr-addr} True&#xA;
             else&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_local_as_replace_as ${vrf-name} ${nbr-addr} False&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="override-capability" help="Override capability negotiation result">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_override_capability ${vrf-name} ${nbr-addr} True</ACTION>
  </COMMAND>
  <COMMAND name="passive" help="Don't send open messages to this neighbor">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_transport_config_passive_mode ${vrf-name} ${nbr-addr} True</ACTION>
  </COMMAND>
  <COMMAND name="password" help="Set a password">
    <PARAM name="String" help="Password" ptype="STRING">
      <PARAM name="encrypted" help="The password is stored in an encrypted format" mode="subcommand" ptype="SUBCOMMAND" optional="true"/>
    </PARAM>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_auth_password ${vrf-name} ${nbr-addr} ${String}</ACTION>
  </COMMAND>
  <COMMAND name="port" help="Neighbor's BGP port">
    <PARAM name="tcpport" help="TCP port number" ptype="RANGE_0_65535"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_peer_port ${vrf-name} ${nbr-addr} ${tcpport}</ACTION>
  </COMMAND>
  <COMMAND name="solo" help="Solo peer - part of its own update group">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_solo_peer ${vrf-name} ${nbr-addr} True</ACTION>
  </COMMAND>
  <COMMAND name="strict-capability-match" help="Strict capability negotiation match">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_strict_capability_match ${vrf-name} ${nbr-addr} True</ACTION>
  </COMMAND>
  <COMMAND name="ttl-security" help="TTL security"/>
  <COMMAND name="ttl-security hops" help="BGP ttl-security parameters">
    <PARAM name="nhops" help="Specify the maximum number of hops to the BGP peer" ptype="RANGE_1_254"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_ttl_security_hops ${vrf-name} ${nbr-addr} ${nhops}</ACTION>
  </COMMAND>

  <COMMAND name="address-family" help="Enter Address Family command mode" />
  <COMMAND name="address-family ipv4" help="Enter Address Family command mode" view="configure-router-bgp-nbr-ipv4-view" viewid="vrf-name=${vrf-name};nbr-addr=${nbr-addr};nbr-family=nbr-ipv4">
    <PARAM name="unicast" help="Address Family" mode="subcommand" ptype="SUBCOMMAND" view="configure-router-bgp-nbr-ipv4-view" viewid="vrf-name=${vrf-name};nbr-addr=${nbr-addr};nbr-family=nbr-ipv4"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_afi_safis_afi_safi_config ${vrf-name} ${nbr-addr} IPV4_UNICAST</ACTION>
  </COMMAND>
  <COMMAND name="address-family ipv6" help="Enter Address Family command mode" view="configure-router-bgp-nbr-ipv6-view" viewid="vrf-name=${vrf-name};nbr-addr=${nbr-addr};nbr-family=nbr-ipv6">
    <PARAM name="unicast" help="Address Family" mode="subcommand" ptype="SUBCOMMAND" view="configure-router-bgp-nbr-ipv6-view" viewid="vrf-name=${vrf-name};nbr-addr=${nbr-addr};nbr-family=nbr-ipv6"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_afi_safis_afi_safi_config ${vrf-name} ${nbr-addr} IPV6_UNICAST</ACTION>
  </COMMAND>
  <COMMAND name="address-family l2vpn" help="Enter Address Family command mode" view="configure-router-bgp-nbr-l2vpn-view" viewid="vrf-name=${vrf-name};nbr-addr=${nbr-addr};nbr-family=nbr-l2vpn">
    <PARAM name="evpn" help="Address Family" mode="subcommand" ptype="SUBCOMMAND" view="configure-router-bgp-nbr-l2vpn-view" viewid="vrf-name=${vrf-name};nbr-addr=${nbr-addr};nbr-family=nbr-l2vpn"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_afi_safis_afi_safi_config ${vrf-name} ${nbr-addr} L2VPN_EVPN</ACTION>
  </COMMAND>

  <COMMAND name="no" help="no commands"/>
  <COMMAND name="no address-family" help="Enter Address Family command mode"/>
  <COMMAND name="no address-family ipv4" help="Enter Address Family command mode">
    <PARAM name="unicast" help="Enter Address Family command mode" mode="subcommand" ptype="SUBCOMMAND"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_afi_safis_afi_safi ${vrf-name} ${nbr-addr} IPV4_UNICAST</ACTION>
  </COMMAND>
  <COMMAND name="no address-family ipv6" help="Enter Address Family command mode">
    <PARAM name="unicast" help="Enter Address Family command mode" mode="subcommand" ptype="SUBCOMMAND"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_afi_safis_afi_safi ${vrf-name} ${nbr-addr} IPV6_UNICAST</ACTION>
  </COMMAND>
  <COMMAND name="no address-family l2vpn" help="Enter Address Family command mode">
    <PARAM name="evpn" help="Enter Address Family command mode" mode="subcommand" ptype="SUBCOMMAND"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_afi_safis_afi_safi ${vrf-name} ${nbr-addr} L2VPN_EVPN</ACTION>
  </COMMAND>
  <COMMAND name="no description" help="Remove the string describing the neighbor or the peer-group">
    <PARAM name="String" help="Enter the string (max 80 characters) to describe neighbor/peer-group" ptype="STRING" optional="true"/>  
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_description ${vrf-name} ${nbr-addr} ${String}</ACTION>
  </COMMAND>
  <COMMAND name="no ebgp-multihop" help="Allow EBGP neighbors not on directly connected networks">
    <PARAM name="hop-count" help="Maximum hop count (default=255)" ptype="RANGE_1_255" optional="true"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_ebgp_multihop_config_enabled ${vrf-name} ${nbr-addr}&#xA;
             python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_ebgp_multihop_config_multihop_ttl ${vrf-name} ${nbr-addr}&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no peer-group" help="Inherit configuration of peer-group" mode="subcommand" ptype="SUBCOMMAND">
    <PARAM name="template-name" help="Name of peer-group from which to inherit" ptype="STRING" optional="true"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_peer_group ${vrf-name} ${nbr-addr} ${template-name}</ACTION>
  </COMMAND>
  <COMMAND name="no remote-as" help="Specify a BGP neighbor AS">
    <PARAM name="remtype" help="Remote type" mode="switch" ptype="SUBCOMMAND" optional="true">
      <PARAM name="internal" help="Internal BGP peer" mode="subcommand" ptype="SUBCOMMAND"/>
      <PARAM name="external" help="External BGP peer" mode="subcommand" ptype="SUBCOMMAND"/>
      <PARAM name="as-num-dot" help="Autonomous system number" ptype="RANGE_1_4294967295"/>
    </PARAM>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_peer_as ${vrf-name} ${nbr-addr} ${as-num-dot}&#xA;
             python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_peer_type ${vrf-name} ${nbr-addr} ${internal} ${external}&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no timers" help="Adjust routing timers">
    <PARAM name="timertype" help="Timer type" mode="switch" ptype="SUBCOMMAND">
      <PARAM name="keepalive-intvl" help="Keepalive interval (default=60)" ptype="RANGE_1_3600">
        <PARAM name="hold-time" help="Holdtime (default=180)" ptype="RANGE_1_3600"/>
      </PARAM>
      <PARAM name="connect" help="BGP connect timer" mode="subcommand" ptype="SUBCOMMAND">
        <PARAM name="connect-time" help="Connect timer" ptype="RANGE_1_65535"/>
      </PARAM>
    </PARAM>
    <ACTION>
             if test "${timertype}" = "connect" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_timers_config_connect_retry ${vrf-name} ${nbr-addr} ${connect-time}&#xA;
             else&#xA;
python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_timers_config_keepalive_interval ${vrf-name} ${nbr-addr} ${keepalive-intvl}&#xA;
             python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_timers_config_hold_time ${vrf-name} ${nbr-addr} ${hold-time}&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no update-source" help="Source of routing updates">
    <PARAM name="source_param" help="update-source param"  mode="switch" ptype="SUBCOMMAND">
      <PARAM name="ip" help="IP source" ptype="IPV4V6_ADDR" view="configure-router-bgp-nbr-view" viewid="nbr-addr=${ip};vrf-name=${vrf-name}" optional="true"/>
      <PARAM name="interface" help="Interface name" ptype="STRING"/>
    </PARAM>
    <ACTION>
            if test "${source_param}" = "ip" ; then&#xA;
                   python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_transport_config_local_address ${vrf-name} ${nbr-addr} ${ip}&#xA;
            else&#xA;
                   python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_transport_config_local_address ${vrf-name} ${nbr-addr} ${interface}&#xA;
            fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no shutdown" help="Shutdown a neighbor">
    <PARAM name="message" help="Add a shutdown message (draft-ietf-idr-shutdown-06)" mode="subcommand" ptype="SUBCOMMAND" optional="true">
       <PARAM name="MSG" help="Shutdown message" ptype="STRING"/>  
    </PARAM>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_enabled ${vrf-name} ${nbr-addr} True&#xA;
             python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_shutdown_message ${vrf-name} ${nbr-addr} ${MSG}&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no advertisement-interval" help="Minimum interval between sending BGP routing updates">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_timers_config_minimum_advertisement_interval ${vrf-name} ${nbr-addr}</ACTION>
  </COMMAND>
  <COMMAND name="no bfd" help="Enables BFD support">
    <PARAM name="check-control-plane-failure" help="Link dataplane status with BGP controlplane" mode="subcommand" ptype="SUBCOMMAND" optional="true"/>
    <ACTION> if test -n "${check-control-plane-failure}" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_bfd_check_control_plane_failure ${vrf-name} ${nbr-addr}&#xA;
             else&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_bfd_check_control_plane_failure ${vrf-name} ${nbr-addr}&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_bfd ${vrf-name} ${nbr-addr}&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no capability" help="Advertise capability to the peer"/>
  <COMMAND name="no capability extended-nexthop" help="Advertise extended next-hop capability to the peer">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_capability_extended_nexthop ${vrf-name} ${nbr-addr}</ACTION>
  </COMMAND>
  <COMMAND name="no capability dynamic" help="Advertise dynamic capability to this neighbor">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_capability_dynamic ${vrf-name} ${nbr-addr}</ACTION>
  </COMMAND>
  <COMMAND name="no disable-connected-check" help="One-hop away EBGP peer using loopback address">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_disable_ebgp_connected_route_check ${vrf-name} ${nbr-addr}</ACTION>
  </COMMAND>
  <COMMAND name="no dont-capability-negotiate" help="Do not perform capability negotiation">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_dont_negotiate_capability ${vrf-name} ${nbr-addr} False</ACTION>
  </COMMAND>
  <COMMAND name="no enforce-first-as" help="Enforce the first AS for EBGP routes">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_enforce_first_as ${vrf-name} ${nbr-addr}</ACTION>
  </COMMAND>
  <COMMAND name="no enforce-multihop" help="Enforce EBGP neighbors perform multihop">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_enforce_multihop ${vrf-name} ${nbr-addr} False</ACTION>
  </COMMAND>
  <COMMAND name="no local-as" help="Specify a local-as number">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_local_as ${vrf-name} ${nbr-addr}&#xA;
             python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_local_as_no_prepend ${vrf-name} ${nbr-addr}&#xA;
             python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_local_as_replace_as ${vrf-name} ${nbr-addr}&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no override-capability" help="Override capability negotiation result">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_override_capability ${vrf-name} ${nbr-addr} False</ACTION>
  </COMMAND>
  <COMMAND name="no passive" help="Don't send open messages to this neighbor">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_transport_config_passive_mode ${vrf-name} ${nbr-addr}</ACTION>
  </COMMAND>
  <COMMAND name="no password" help="Set a password">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_auth_password ${vrf-name} ${nbr-addr}</ACTION>
  </COMMAND>
  <COMMAND name="no port" help="Neighbor's BGP port">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_peer_port ${vrf-name} ${nbr-addr} ${tcpport}</ACTION>
  </COMMAND>
  <COMMAND name="no solo" help="Solo peer - part of its own update group">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_solo_peer ${vrf-name} ${nbr-addr}</ACTION>
  </COMMAND>
  <COMMAND name="no strict-capability-match" help="Strict capability negotiation match">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_strict_capability_match ${vrf-name} ${nbr-addr}</ACTION>
  </COMMAND>
  <COMMAND name="no ttl-security" help="BGP ttl-security parameters"/>
  <COMMAND name="no ttl-security hops" help="BGP ttl-security parameters">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_neighbors_neighbor_config_ttl_security_hops ${vrf-name} ${nbr-addr}</ACTION>
  </COMMAND>
</VIEW>

<VIEW name="configure-router-bgp-template-view" prompt="${SYSTEM_NAME}(config-router-bgp-pg)# " depth="3">
  <NAMESPACE ref="configure-view" help="false" completion="false" />
  <NAMESPACE ref="configure-router-bgp-view" help="false" completion="false" />
  <COMMAND name="description" help="Assign a string describing the neighbor">
    <PARAM name="String" help="Enter the string (max 80 characters) to describe neighbor/peer-group" ptype="STRING"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_description ${vrf-name} ${template-name} ${String}</ACTION>
  </COMMAND>
  <COMMAND name="ebgp-multihop" help="Allow EBGP neighbors not on directly connected networks">
    <PARAM name="hop-count" help="Maximum hop count (default=255)" ptype="RANGE_1_255" optional="true"/>
    <ACTION> if test -n "${hop-count}" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_ebgp_multihop_config ${vrf-name} ${template-name} True ${hop-count}&#xA;
             else&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_ebgp_multihop_config ${vrf-name} ${template-name} True 255&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="remote-as" help="Specify a BGP neighbor AS">
    <PARAM name="remtype" help="Remote type" mode="switch" ptype="SUBCOMMAND">
      <PARAM name="internal" help="Internal BGP peer" mode="subcommand" ptype="SUBCOMMAND"/>
      <PARAM name="external" help="External BGP peer" mode="subcommand" ptype="SUBCOMMAND"/>
      <PARAM name="as-num-dot" help="Autonomous system number" ptype="RANGE_1_4294967295"/>
    </PARAM>
    <ACTION>
             if test "${remtype}" = "internal" -o "${remtype}" = "external" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_peer_type ${vrf-name} ${template-name} ${remtype}&#xA;
             else&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_peer_as ${vrf-name} ${template-name} ${as-num-dot}&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="timers" help="Adjust routing timers">
    <PARAM name="timertype" help="Timer type" mode="switch" ptype="SUBCOMMAND">
      <PARAM name="keepalive-intvl" help="Keepalive interval (default=60)" ptype="RANGE_1_3600">
        <PARAM name="hold-time" help="Holdtime (default=180)" ptype="RANGE_1_3600"/>
      </PARAM>
      <PARAM name="connect" help="BGP connect timer" mode="subcommand" ptype="SUBCOMMAND">
        <PARAM name="connect-time" help="Connect timer" ptype="RANGE_1_65535"/>
      </PARAM>
    </PARAM>
    <ACTION>
             if test "${timertype}" = "connect" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_timers_config_connect_retry ${vrf-name} ${template-name} ${connect-time}&#xA;
             else&#xA;
python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_timers_config_keepalive_interval ${vrf-name} ${template-name} ${keepalive-intvl}&#xA;
             python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_timers_config_hold_time ${vrf-name} ${template-name} ${hold-time}&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="update-source" help="Source of routing updates">
    <PARAM name="source_param" help="update-source param"  mode="switch" ptype="SUBCOMMAND">
      <PARAM name="ip" help="IP source" ptype="IPV4V6_ADDR" view="configure-router-bgp-template-view"/>
      <PARAM name="interface" help="Interface name" ptype="STRING" view="configure-router-bgp-template-view" />
    </PARAM>
    <ACTION>
             if test "${source_param}" = "ip"; then&#xA;
                python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_transport_config_local_address ${vrf-name} ${template-name} ${ip}&#xA;
             else&#xA;
                python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_transport_config_local_address ${vrf-name} ${template-name} ${interface}&#xA;
             fi&#xA;
    </ACTION>
    
  </COMMAND>
  <COMMAND name="shutdown" help="Shutdown a neighbor">
    <PARAM name="message" help="Add a shutdown message (draft-ietf-idr-shutdown-06)" mode="subcommand" ptype="SUBCOMMAND" optional="true">
       <PARAM name="MSG" help="Shutdown message" ptype="STRING"/>
    </PARAM>
    <ACTION> if test -n "${message}" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_shutdown_message ${vrf-name} ${template-name} ${MSG}&#xA;
             fi&#xA;
             python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_enabled ${vrf-name} ${template-name} False&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="advertisement-interval" help="Minimum interval between sending BGP routing updates">
    <PARAM name="tval" help="Seconds" ptype="RANGE_0_600"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py PATCH_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_timers_config_minimum_advertisement_interval ${vrf-name} ${template-name} ${tval}</ACTION>
  </COMMAND>
  <COMMAND name="bfd" help="Enables BFD support">
    <PARAM name="check-control-plane-failure" help="Link dataplane status with BGP controlplane" mode="subcommand" ptype="SUBCOMMAND" optional="true"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_bfd ${vrf-name} ${template-name} True&#xA;
             if test -n "${check-control-plane-failure}" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_bfd_check_control_plane_failure ${vrf-name} ${template-name} True&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="capability" help="Advertise capability to the peer"/>
  <COMMAND name="capability extended-nexthop" help="Advertise extended next-hop capability to the peer">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_capability_extended_nexthop ${vrf-name} ${template-name} True</ACTION>
  </COMMAND>
  <COMMAND name="capability dynamic" help="Advertise dynamic capability to this neighbor">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_capability_dynamic ${vrf-name} ${template-name} True</ACTION>
  </COMMAND>
  <COMMAND name="disable-connected-check" help="One-hop away EBGP peer using loopback address">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_disable_ebgp_connected_route_check ${vrf-name} ${template-name} True</ACTION>
  </COMMAND>
  <COMMAND name="dont-capability-negotiate" help="Do not perform capability negotiation">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_dont_negotiate_capability ${vrf-name} ${template-name} True</ACTION>
  </COMMAND>
  <COMMAND name="enforce-first-as" help="Enforce the first AS for EBGP routes">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_enforce_first_as ${vrf-name} ${template-name} True</ACTION>
  </COMMAND>
  <COMMAND name="enforce-multihop" help="Enforce EBGP neighbors perform multihop">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_enforce_multihop ${vrf-name} ${template-name} True</ACTION>
  </COMMAND>
  <COMMAND name="local-as" help="Specify a local-as number">
    <PARAM name="asnum" help="Autonomous system number" ptype="RANGE_1_4294967295">
      <PARAM name="no-prepend" help="Do not prepend local-as to updates from ebgp peers" mode="subcommand" ptype="SUBCOMMAND" optional="true">
        <PARAM name="replace-as" help="Do not prepend local-as to updates from ibgp peers"  mode="subcommand" ptype="SUBCOMMAND" optional="true"/>
      </PARAM>
    </PARAM>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_local_as ${vrf-name} ${template-name} ${asnum}&#xA;
             if test -n "${no-prepend}" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_local_as_no_prepend ${vrf-name} ${template-name} True&#xA;
             else&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_local_as_no_prepend ${vrf-name} ${template-name} False&#xA;
             fi&#xA;
             if test -n "${replace-as}" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_local_as_replace_as ${vrf-name} ${template-name} True&#xA;
             else&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_local_as_replace_as ${vrf-name} ${template-name} False&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="override-capability" help="Override capability negotiation result">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_override_capability ${vrf-name} ${template-name} True</ACTION>
  </COMMAND>
  <COMMAND name="passive" help="Don't send open messages to this neighbor">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_transport_config_passive_mode ${vrf-name} ${template-name} True</ACTION>
  </COMMAND>
  <COMMAND name="password" help="Set a password">
    <PARAM name="String" help="Password" ptype="STRING">
      <PARAM name="encrypted" help="The password is stored in an encrypted format" mode="subcommand" ptype="SUBCOMMAND" optional="true"/>
    </PARAM>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_auth_password ${vrf-name} ${template-name} ${String}</ACTION>
  </COMMAND>
  <COMMAND name="port" help="Neighbor's BGP port" ref="hidden">
    <PARAM name="tcpport" help="TCP port number" ptype="RANGE_0_65535"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_peer_port ${vrf-name} ${template-name} ${tcpport}</ACTION>
  </COMMAND>
  <COMMAND name="solo" help="Solo peer - part of its own update group">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_solo_peer ${vrf-name} ${template-name} True</ACTION>
  </COMMAND>
  <COMMAND name="strict-capability-match" help="Strict capability negotiation match">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_strict_capability_match ${vrf-name} ${template-name} True</ACTION>
  </COMMAND>
  <COMMAND name="ttl-security" help="TTL security"/>
  <COMMAND name="ttl-security hops" help="BGP ttl-security parameters">
    <PARAM name="nhops" help="Specify the maximum number of hops to the BGP peer" ptype="RANGE_1_254"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_ttl_security_hops ${vrf-name} ${template-name} ${nhops}</ACTION>
  </COMMAND>
  <COMMAND name="address-family" help="Enter Address Family command mode" />
  <COMMAND name="address-family ipv4" help="Enter Address Family command mode" view="configure-router-bgp-template-ipv4-view" viewid="vrf-name=${vrf-name};template-name=${template-name};pg-family=pg-ipv4">
    <PARAM name="unicast" help="Address Family" mode="subcommand" ptype="SUBCOMMAND" view="configure-router-bgp-template-ipv4-view" viewid="vrf-name=${vrf-name};template-name=${template-name};pg-family=pg-ipv4"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_afi_safis_afi_safi_config ${vrf-name} ${template-name} IPV4_UNICAST</ACTION>
  </COMMAND>
  <COMMAND name="address-family ipv6" help="Enter Address Family command mode" view="configure-router-bgp-template-ipv6-view" viewid="vrf-name=${vrf-name};template-name=${template-name};pg-family=pg-ipv6">
    <PARAM name="unicast" help="Address Family" mode="subcommand" ptype="SUBCOMMAND" view="configure-router-bgp-template-ipv6-view" viewid="vrf-name=${vrf-name};template-name=${template-name};pg-family=pg-ipv6"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_afi_safis_afi_safi_config ${vrf-name} ${template-name} IPV6_UNICAST</ACTION>
  </COMMAND>
  <COMMAND name="address-family l2vpn" help="Enter Address Family command mode" view="configure-router-bgp-template-l2vpn-view" viewid="vrf-name=${vrf-name};template-name=${template-name};pg-family=pg-l2vpn">
    <PARAM name="evpn" help="Address Family" mode="subcommand" ptype="SUBCOMMAND" view="configure-router-bgp-template-l2vpn-view" viewid="vrf-name=${vrf-name};template-name=${template-name};pg-family=pg-l2vpn"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_afi_safis_afi_safi_config ${vrf-name} ${template-name} L2VPN_EVPN</ACTION>
  </COMMAND>
  <COMMAND name="no" help="no commands"/>
  <COMMAND name="no address-family" help="Enter Address Family command mode"/>
  <COMMAND name="no address-family ipv4" help="Enter Address Family command mode">
    <PARAM name="unicast" help="Enter Address Family command mode" mode="subcommand" ptype="SUBCOMMAND"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_afi_safis_afi_safi ${vrf-name} ${template-name} IPV4_UNICAST</ACTION>
  </COMMAND>

  <COMMAND name="no address-family ipv6" help="Enter Address Family command mode">
    <PARAM name="unicast" help="Enter Address Family command mode" mode="subcommand" ptype="SUBCOMMAND"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_afi_safis_afi_safi ${vrf-name} ${template-name} IPV6_UNICAST</ACTION>
  </COMMAND>
  <COMMAND name="no address-family l2vpn" help="Enter Address Family command mode">
    <PARAM name="evpn" help="Enter Address Family command mode" mode="subcommand" ptype="SUBCOMMAND"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_afi_safis_afi_safi ${vrf-name} ${template-name} L2VPN_EVPN</ACTION>
  </COMMAND>
  <COMMAND name="no description" help="Remove the string describing the neighbor or the peer-group">
    <PARAM name="String" help="Enter the string (max 80 characters) to describe neighbor/peer-group" ptype="STRING" optional="true"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_description ${vrf-name} ${template-name} ${String}</ACTION>
  </COMMAND>
  <COMMAND name="no ebgp-multihop" help="Allow EBGP neighbors not on directly connected networks">
    <PARAM name="hop-count" help="Maximum hop count (default=255)" ptype="RANGE_1_255" optional="true"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_ebgp_multihop_config_enabled ${vrf-name} ${template-name}&#xA;
             python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_ebgp_multihop_config_multihop_ttl ${vrf-name} ${template-name}&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no remote-as" help="Specify a BGP neighbor AS">
    <PARAM name="remtype" help="Remote type" mode="switch" ptype="SUBCOMMAND" optional="true">
      <PARAM name="internal" help="Internal BGP peer" mode="subcommand" ptype="SUBCOMMAND"/>
      <PARAM name="external" help="External BGP peer" mode="subcommand" ptype="SUBCOMMAND"/>
      <PARAM name="as-num-dot" help="Autonomous system number" ptype="RANGE_1_4294967295"/>
    </PARAM>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_peer_as ${vrf-name} ${template-name} ${as-num-dot}&#xA;
             python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_peer_type ${vrf-name} ${template-name} ${internal} ${external}&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no timers" help="Adjust routing timers">
    <PARAM name="timertype" help="Timer type" mode="switch" ptype="SUBCOMMAND">
      <PARAM name="keepalive-intvl" help="Keepalive interval (default=60)" ptype="RANGE_1_3600">
        <PARAM name="hold-time" help="Holdtime (default=180)" ptype="RANGE_1_3600"/>
      </PARAM>
      <PARAM name="connect" help="BGP connect timer" mode="subcommand" ptype="SUBCOMMAND">
        <PARAM name="connect-time" help="Connect timer" ptype="RANGE_1_65535"/>
      </PARAM>
    </PARAM>
    <ACTION>
             if test "${timertype}" = "connect" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_timers_config_connect_retry ${vrf-name} ${template-name} ${connect-time}&#xA;
             else&#xA;
python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_timers_config_keepalive_interval ${vrf-name} ${template-name} ${keepalive-intvl}&#xA;
             python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_timers_config_hold_time ${vrf-name} ${template-name} ${hold-time}&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no update-source" help="Source of routing updates">
    <PARAM name="source_param" help="update-source param"  mode="switch" ptype="SUBCOMMAND">
      <PARAM name="ip" help="IP source" ptype="IPV4V6_ADDR" view="configure-router-bgp-template-view" viewid="nbr-addr=${ip};vrf-name=${vrf-name}" optional="true"/>
      <PARAM name="interface" help="Interface name" ptype="STRING" view="configure-router-bgp-template-view" />
    </PARAM>
    <ACTION>
             if test "${source_param}" = "ip"; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_transport_config_local_address ${vrf-name} ${template-name} ${ip}&#xA;
             else&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_transport_config_local_address ${vrf-name} ${template-name} ${interface}&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no shutdown" help="Shutdown a neighbor">
    <PARAM name="message" help="Add a shutdown message (draft-ietf-idr-shutdown-06)" mode="subcommand" ptype="SUBCOMMAND" optional="true">
       <PARAM name="MSG" help="Shutdown message" ptype="STRING"/>
    </PARAM>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_enabled ${vrf-name} ${template-name} True&#xA;
             python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_shutdown_message ${vrf-name} ${template-name} ${MSG}&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no advertisement-interval" help="Minimum interval between sending BGP routing updates">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py DELETE_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_timers_config_minimum_advertisement_interval ${vrf-name} ${template-name}</ACTION>
  </COMMAND>
  <COMMAND name="no bfd" help="Enables BFD support">
    <PARAM name="check-control-plane-failure" help="Link dataplane status with BGP controlplane" mode="subcommand" ptype="SUBCOMMAND" optional="true"/>
    <ACTION> if test -n "${check-control-plane-failure}" ; then&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_bfd_check_control_plane_failure ${vrf-name} ${template-name}&#xA;
             else&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_bfd_check_control_plane_failure ${vrf-name} ${template-name}&#xA;
                 python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_bfd ${vrf-name} ${template-name}&#xA;
             fi&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no capability" help="Advertise capability to the peer"/>
  <COMMAND name="no capability extended-nexthop" help="Advertise extended next-hop capability to the peer">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_capability_extended_nexthop ${vrf-name} ${template-name}</ACTION>
  </COMMAND>
  <COMMAND name="no capability dynamic" help="Advertise dynamic capability to this neighbor">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_capability_dynamic ${vrf-name} ${template-name}</ACTION>
  </COMMAND>
  <COMMAND name="no disable-connected-check" help="One-hop away EBGP peer using loopback address">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_disable_ebgp_connected_route_check ${vrf-name} ${template-name}</ACTION>
  </COMMAND>
  <COMMAND name="no dont-capability-negotiate" help="Do not perform capability negotiation">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_dont_negotiate_capability ${vrf-name} ${template-name} False</ACTION>
  </COMMAND>
  <COMMAND name="no enforce-first-as" help="Enforce the first AS for EBGP routes">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_enforce_first_as ${vrf-name} ${template-name}</ACTION>
  </COMMAND>
  <COMMAND name="no enforce-multihop" help="Enforce EBGP neighbors perform multihop">
    <ACTION>  python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_enforce_multihop ${vrf-name} ${template-name} False</ACTION>
  </COMMAND>
  <COMMAND name="no local-as" help="Specify a local-as number">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_local_as ${vrf-name} ${template-name}&#xA;
             python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_local_as_no_prepend ${vrf-name} ${template-name}&#xA;
             python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_local_as_replace_as ${vrf-name} ${template-name}&#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no override-capability" help="Override capability negotiation result">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_override_capability ${vrf-name} ${template-name} False</ACTION>
  </COMMAND>
  <COMMAND name="no passive" help="Don't send open messages to this neighbor">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_transport_config_passive_mode ${vrf-name} ${template-name}</ACTION>
  </COMMAND>
  <COMMAND name="no password" help="Set a password">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_auth_password ${vrf-name} ${template-name}</ACTION>
  </COMMAND>
  <COMMAND name="no port" help="Neighbor's BGP port">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_peer_port ${vrf-name} ${template-name} ${tcpport}</ACTION>
  </COMMAND>
  <COMMAND name="no solo" help="Solo peer - part of its own update group">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_solo_peer ${vrf-name} ${template-name}</ACTION>
  </COMMAND>
  <COMMAND name="no strict-capability-match" help="Strict capability negotiation match">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_strict_capability_match ${vrf-name} ${template-name}</ACTION>
  </COMMAND>
  <COMMAND name="no ttl-security" help="BGP ttl-security parameters"/>
  <COMMAND name="no ttl-security hops" help="BGP ttl-security parameters">
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py delete_openconfig_bgp_ext_network_instances_network_instance_protocols_protocol_bgp_peer_groups_peer_group_config_ttl_security_hops ${vrf-name} ${template-name}</ACTION>
  </COMMAND>
</VIEW>

<VIEW name="configure-router-bgp-vrf-view" prompt="${SYSTEM_NAME}(config-router-bgp-${instance}-vrf)# " depth="3">
  <NAMESPACE ref="configure-view" help="false" completion="false" />
  <NAMESPACE ref="configure-router-bgp-view" help="false" completion="false" />
  <COMMAND name="router-id" help="Override configured router identifier">
    <PARAM name="ip-addr" help="Router identifier" ptype="IP_ADDR"/>
    <ACTION> python $SONIC_CLI_ROOT/sonic-cli-bgp.py patch_openconfig_bgp_bgp_global_config_router_id ${vrf-name} ${instance} ${ip-addr} True </ACTION>
  </COMMAND>
</VIEW>
</CLISH_MODULE>

